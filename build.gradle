plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.0-SNAPSHOT" apply false
    id "io.github.pacifistmc.forgix" version "1.2.2"
}
repositories {
    gradlePluginPortal()
}

architectury {
    minecraft = rootProject.minecraft_version
}

def hashCode = new Random().nextInt()
def hash = "%08x".formatted(hashCode)

version = "${mod_version}+${System.getenv("CI_PIPELINE_ID") == null ? hash : System.getenv("CI_PIPELINE_ID")}"

println "Mod version: $version"

Object getModDescription() {
    return "${mod_description}"
}
forgix {
    group = "com.ultreon.mods"
    mergedJarName = "ultreon-lib-${version}.jar"
    outputDir = "build/libs/merged"

    forge {
        projectName = "merge-forge"
        jarLocation = "build/libs/ultreon-lib-${version}.jar"
       // additionalRelocate("com.ultreon.ultreonlib", "forge.com.ultreon.ultreonlib")

    //    mixin "ultreonlib-common.mixins.json"
   //     mixin "ultreon-lib.mixins.json"
    }

    fabric {
        projectName = "merge-fabric"
        jarLocation = "build/libs/ultreon-lib-${version}.jar"
     //   additionalRelocate("com.ultreon.ultreonlib", "fabric.com.ultreon.ultreonlib")
    }
}

println "forgix.outputDir = $forgix.outputDir"

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }


        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven { url "https://maven.architectury.dev/" }
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.19.2:2022.08.10@zip")
        }
    }

    processResources {
        exclude "*.pdn", "*.xcf", "*.bbmodel", "*.bin", "*.rom"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url = "https://maven.parchmentmc.org" }

        flatDir {
            dir "${rootProject.projectDir}/libs"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

mergeJars.mustRunAfter build
//build.dependsOn mergeJars
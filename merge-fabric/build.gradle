plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

version rootProject.version

architectury {
    platformSetupLoomIde()
    fabric()
}


repositories {
    maven { url = "https://cursemaven.com" }
    maven { url "https://maven.terraformersmc.com/releases" }
    mavenCentral()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    include(project(":fabric"))
    include("com.github.Ultreon:ultreon-data:${ultreon_data_version}")

    include("com.github.Ultreon.corelibs:corelibs-collections-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-commons-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-crash-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-datetime-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-events-v1:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-functions-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-registries-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-resources-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-text-v0:$corelibs_version") { transitive false }
    include("com.github.Ultreon.corelibs:corelibs-translations-v0:$corelibs_version") { transitive false }
}

processResources {
    dependsOn ":fabric:jar"
//    inputs.property "version", rootProject.getIngame_version()
//
//    filesMatching("fabric.mod.json") {
//        expand "version": rootProject.getIngame_version()
//    }
}

shadowJar {
    dependsOn ":fabric:shadowJar"
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    dependsOn ":fabric:remapJar"
    injectAccessWidener = true
    //noinspection GrDeprecatedAPIUsage
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    dependsOn ":fabric:jar"
    classifier "dev"
}

sourcesJar {
    dependsOn ":fabric:sourcesJar"
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            //noinspection GroovyAssignabilityCheck
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
